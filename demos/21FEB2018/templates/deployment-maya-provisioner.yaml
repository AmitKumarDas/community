apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: openebs-provisioner
{{- if .Values.rbacEnable }}
  namespace: {{ .Values.rbac.namespace }}
{{- end }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: openebs-provisioner
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      serviceAccountName: {{ .Values.operator.name }}
      containers:
      - name: openebs-provisioner
        image: "{{ .Values.provisioner.image }}:{{ .Values.provisioner.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs provisioner to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs provisioner to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this provisioner will
        # lookup to find maya api service
{{- if .Values.rbacEnable }}
        - name: OPENEBS_NAMESPACE
          value: "{{ .Values.rbac.namespace }}"
{{- end }}
        - name: NODE_NAME
          valueFrom: 
            fieldRef:
              fieldPath: spec.nodeName
        - name: OPENEBS_MONITOR_URL
          value: "{{ .Values.provisioner.monitorurl }}"
        - name: OPENEBS_MONITOR_VOLKEY
          value: "{{ .Values.provisioner.monitorvolkey }}"
        - name: MAYA_PORTAL_URL
          value: "{{ .Values.provisioner.mayaportalurl }}"
