---
# Source: openebs/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: openebs
---
# Source: openebs/templates/cm-openebs-prometheus-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ci-openebs-prometheus-config
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: prometheus-config
data:
  prometheus.yml: |-
    global:
      external_labels:
        slave: slave1
      scrape_interval: 5s
      evaluation_interval: 5s
    scrape_configs:
    #- job_name: 'prometheus'
      #static_configs:
      # Added this to allow for federation collection
      # Replace localhost with the nodeIP
      #  - targets: ['localhost:32514']
    - job_name: 'openebs-prometheus-server'
      scheme: http
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_name]
        regex: openebs-prometheus-server
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
    - job_name: 'openebs-volumes'
      scheme: http
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_monitoring]
        regex: volume_exporter_prometheus
        action: keep
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_label_vsm]
        action: replace
        target_label: openebs_pv
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: '(.*)9501'
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: '(.*)3260'
---
# Source: openebs/templates/cm-openebs-prometheus-tunables.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ci-openebs-prometheus-tunables
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: prometheus-tunables
data:
  storage-retention: 24h
---
# Source: openebs/templates/sc-openebs-cassandra.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-cassandra
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-es-data-sc.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-es-data-sc
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-jupyter.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-jupyter
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-kafka.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-kafka
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-mongodb.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-mongodb
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-percona.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-percona
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-redis.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-redis
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-standalone.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-standalone
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "1"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-standard.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-standard
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/sc-openebs-zk.yaml
# Define a storage classes supported by OpenEBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-zk
  labels:
    chart: "openebs-0.5.3"
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/storage-pool: "default"
  openebs.io/jiva-replica-count: "3"
  openebs.io/volume-monitor: "true"
  openebs.io/capacity: 5G
---
# Source: openebs/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openebs-maya-operator
  namespace: openebs
  labels:
    chart: "openebs-0.5.3"
---
# Source: openebs/templates/crd-sp.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: storagepools.openebs.io
  labels:
    chart: "openebs-0.5.3"
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1alpha1
  # either Namespaced or Cluster
  scope: Cluster
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: storagepools
    # singular name to be used as an alias on the CLI and for display
    singular: storagepool
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: StoragePool
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - sp
---
# Source: openebs/templates/crd-spc.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: storagepoolclaims.openebs.io
  labels:
    chart: "openebs-0.5.3"
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: openebs.io
  # version name to use for REST API: /apis/<group>/<version>
  version: v1alpha1
  # either Namespaced or Cluster
  scope: Cluster
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: storagepoolclaims
    # singular name to be used as an alias on the CLI and for display
    singular: storagepoolclaim
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: StoragePoolClaim
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - spc
---
# Source: openebs/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: openebs-maya-operator
  labels:
    chart: "openebs-0.5.3"
rules:
- apiGroups: ["*"]
  resources: ["nodes","nodes/proxy"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["*"]
  resources: ["namespaces", "services", "pods", "deployments", "events", "endpoints", "configmaps"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["persistentvolumes","persistentvolumeclaims"]
  verbs: ["*"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["storagepools", "volumepolicies"]
  verbs: ["get", "list"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# Source: openebs/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: openebs-maya-operator
  labels:
    chart: "openebs-0.5.3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openebs-maya-operator
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs
---
# Source: openebs/templates/service-maya-apiserver.yaml
apiVersion: v1
kind: Service
metadata:
  name: ci-openebs-maya-apiservice
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    role: apiserver
spec:
  ports:
  - name: api
    port: 5656
    targetPort: 5656
    protocol: TCP
  selector:
    app: openebs
    release: ci
    component: ci-openebs
    role: apiserver
  sessionAffinity: None
---
# Source: openebs/templates/service-openebs-grafana.yaml
apiVersion: v1
kind: Service
metadata:
  name: ci-openebs-grafana
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    role: grafana
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32515
  selector:
    app: openebs
    release: ci
    component: ci-openebs
    role: grafana
---
# Source: openebs/templates/service-openebs-prometheus.yaml
apiVersion: v1
kind: Service
metadata:
  name: ci-openebs-prometheus-service
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    role: prometheus
spec:
  type: NodePort
  ports:
  - port: 80 # this Service's port (cluster-internal IP clusterIP)
    targetPort: 9090 # pods expose this port
    nodePort: 32514
    # Note that this Service will be visible as both NodeIP:nodePort and clusterIp:Port
  selector:
    app: openebs
    release: ci
    component: ci-openebs
    role: prometheus
---
# Source: openebs/templates/deployment-maya-apiserver.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ci-openebs-maya-apiserver
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: apiserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openebs
        release: ci
        component: ci-openebs
        role: apiserver
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-maya-apiserver
        image: "openebs/m-apiserver:1257"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5656
        env:
        # OPENEBS_IO_KUBE_CONFIG enables maya api service to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for maya api server version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_IO_K8S_MASTER enables maya api service to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for maya api server version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://172.28.128.3:8080"
        - name: OPENEBS_IO_JIVA_CONTROLLER_IMAGE
          value: "openebs/jiva:0.5.2"
        - name: OPENEBS_IO_JIVA_REPLICA_IMAGE
          value: "openebs/jiva:0.5.2"
        - name: OPENEBS_IO_VOLUME_MONITOR_IMAGE
          value: "openebs/m-exporter:0.5.2"
        - name: OPENEBS_IO_JIVA_REPLICA_COUNT
          value: "3"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  name: ci-openebs-maya-apiserver
---
# Source: openebs/templates/deployment-maya-provisioner.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ci-openebs-provisioner
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: provisioner
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openebs
        release: ci
        component: ci-openebs
        role: provisioner
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-provisioner
        image: "openebs/openebs-k8s-provisioner:0.5.3-RC1"
        imagePullPolicy: IfNotPresent
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs provisioner to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs provisioner to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this provisioner will
        # lookup to find maya api service
        - name: OPENEBS_NAMESPACE
          value: "openebs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # OPENEBS_MAYA_SERVICE_NAME provides the maya-apiserver K8s service name,
        # that provisioner should forward the volume creaet/delete requests.
        # If not present, "maya-apiserver-service" will be used for lookup.
        # This is supported for openebs provisioner version 0.5.3-RC1 onwards
        - name: OPENEBS_MAYA_SERVICE_NAME
          value: "ci-openebs-maya-apiservice"
        # The following values will be set as annotations to the PV object.
        # Refer : https://github.com/openebs/external-storage/pull/15
        #- name: OPENEBS_MONITOR_URL
        #  value: "http://127.0.0.1:32515/dashboard/db/openebs-volume-stats?orgId=1"
        #- name: OPENEBS_MONITOR_VOLKEY
        #  value: "&var-OpenEBS"
        #- name: MAYA_PORTAL_URL
        #  value: "https://mayaonline.io/"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  name: ci-openebs-provisioner
---
# Source: openebs/templates/deployment-openebs-grafana.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ci-openebs-grafana
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: openebs
        release: ci
        component: ci-openebs
        role: grafana
    spec:
      containers:
      - name: openebs-grafana
        image: "grafana/grafana:4.6.3"
        ports:
        - containerPort: 3000
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
---
# Source: openebs/templates/deployment-openebs-prometheus.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ci-openebs-prometheus
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-0.5.3
    release: ci
    heritage: Tiller
    component: ci-openebs
    role: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openebs
        release: ci
        component: ci-openebs
        role: prometheus
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
        - name: openebs-prometheus
          image: "prom/prometheus:v2.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/prometheus/conf/prometheus.yml"
            # Metrics are stored in an emptyDir volume which
            # exists as long as the Pod is running on that Node.
            # The data in an emptyDir volume is safe across container crashes.
            - "--storage.tsdb.path=/prometheus"
            # How long to retain samples in the local storage.
            - "--storage.tsdb.retention=$(STORAGE_RETENTION)"
          ports:
            - containerPort: 9090
          env:
            # environment vars are stored in prometheus-env configmap.
            - name: STORAGE_RETENTION
              valueFrom:
                configMapKeyRef:
                  name: ci-openebs-prometheus-tunables
                  key: storage-retention
          resources:
            requests:
              # A memory request of 250M means it will try to ensure minimum
              # 250MB RAM .
              memory: "128M"
              # A cpu request of 128m means it will try to ensure minimum
              # .125 CPU; where 1 CPU means :
              # 1 *Hyperthread* on a bare-metal Intel processor with Hyperthreading
              cpu: "128m"
            limits:
              memory: "700M"
              cpu: "500m"
          
          volumeMounts:
            # prometheus config file stored in the given mountpath
            - name: prometheus-server-volume
              mountPath: /etc/prometheus/conf
            # metrics collected by prometheus will be stored at the given mountpath.
            - name: prometheus-storage-volume
              mountPath: /prometheus
      volumes:
        # Prometheus Config file will be stored in this volume 
        - name: prometheus-server-volume
          configMap:
            name: ci-openebs-prometheus-config
        # All the time series stored in this volume in form of .db file.
        - name: prometheus-storage-volume
          # containers in the Pod can all read and write the same files here.
          emptyDir: {}
