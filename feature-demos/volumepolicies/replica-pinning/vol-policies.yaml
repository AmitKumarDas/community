apiVersion: openebs.io/v1alpha1
kind: StoragePool
metadata:
  name: ssd
  type: hostdir
spec:
  path: "/var/myebs"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: openebs-repaffinity-0.6.0
  annotations:
    controller.openebs.io/affinity: pinit
    controller.openebs.io/affinity-topology: kubernetes.io/hostname
    controller.openebs.io/affinity-type: soft
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: openebs-repaffinity-0.6.0
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-repaffinity-0.6.0
  annotations:
    provisioner.openebs.io/version: 0.6.0
provisioner: openebs.io/provisioner-iscsi
parameters:
  openebs.io/volume-policy: openebs-policy-repaffinity-0.6.0
---
apiVersion: openebs.io/v1alpha1
kind: VolumePolicy
metadata:
  name: openebs-policy-repaffinity-0.6.0
spec:
  policies:
  - name: VolumeMonitor
    enabled: "true"
  - name: ControllerImage
    value: openebs/jiva:0.5.0
  - name: ReplicaImage
    value: openebs/jiva:0.5.0
  - name: ReplicaCount
    value: "1"
  - name: StoragePool
    value: ssd
  - name: TaintTolerations
    value: |-
      t1:
        key: node.openebs.io/disktype
        operator: Equal
        value: ssd
        effect: NoSchedule
      t2:
        key: node.openebs.io/disktype
        operator: Equal
        value: ssd
        effect: NoExecute
  - name: EvictionTolerations
    value: |-
      t1:
        effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      t2:
        effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
  - name: NodeAffinityRequiredSchedIgnoredExec
    value: |-
      t1:
        key: beta.kubernetes.io/os
        operator: In
        values:
        - linux
  - name: NodeAffinityPreferredSchedIgnoredExec
    value: |-
      t1:
        key: some-node-label-key
        operator: In
        values:
        - some-node-label-value
  run:
    searchNamespace: default
    tasks:
    - template: volume-service-0.6.0
      identity: vsvc
    - template: volume-path-0.6.0
      identity: vpath
    - template: volume-pvc-0.6.0
      identity: vpvc
    - template: volume-controller-0.6.0
      identity: vctrl
    - template: volume-replica-0.6.0
      identity: vrep
    - template: volume-replica-list-0.6.0
      identity: vreplist
    - template: volume-replica-patch-0.6.0
      identity: vreppatch
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-service-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: v1
    kind: Service
    action: put
  task: |
    apiVersion: v1
    Kind: Service
    metadata:
      labels:
        openebs/controller-service: jiva-controller-service
        openebs.io/controller-service: jiva-controller-svc
        openebs.io/storage-engine-type: jiva
        openebs/volume-provisioner: jiva
        vsm: {{ .Volume.owner }}
        openebs.io/pv: {{ .Volume.owner }}
      name: {{ .Volume.owner }}-ctrl-svc
    spec:
      ports:
      - name: iscsi
        port: 3260
        protocol: TCP
        targetPort: 3260
      - name: api
        port: 9501
        protocol: TCP
        targetPort: 9501
      selector:
        openebs/controller: jiva-controller
        vsm: {{ .Volume.owner }}
        openebs.io/controller: jiva-controller
        openebs.io/pv: {{ .Volume.owner }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-path-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: openebs.io/v1alpha1
    kind: StoragePool
    objectName: {{ .Policy.StoragePool.value }}
    action: get
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-pvc-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: v1
    kind: PersistentVolumeClaim
    objectName: {{ .Volume.pvc }}
    action: get
    queries:
    - alias: objectName
    - alias: affinity
      path: |-
        {.metadata.annotations.controller\.openebs\.io/affinity}
    - alias: affinityTopology
      path: |-
        {.metadata.annotations.controller\.openebs\.io/affinity-topology}
    - alias: affinityType
      path: |-
        {.metadata.annotations.controller\.openebs\.io/affinity-type}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-replica-list-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: v1
    kind: Pod
    action: list
    options: |-
      labelSelector: openebs.io/replica=jiva-replica,openebs.io/pv={{ .Volume.owner }}
    retry: "10,30s"
    queries:
    - alias: objectName
      path: |-
        {.kind}
    - alias: nodeNames
      path: |-
        {.items[*].spec.nodeName}
      verify:
        split: " "
        count: {{ .Policy.ReplicaCount.value }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-replica-patch-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    {{- $isNodeAffinityRSIE := .Policy.NodeAffinityRequiredSchedIgnoredExec.value | default "false" -}}
    {{- $nodeAffinityRSIEVal := fromYaml .Policy.NodeAffinityRequiredSchedIgnoredExec.value -}}
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: extensions/v1beta1
    kind: Deployment
    objectName: {{ .Volume.owner }}-rep
    action: patch
    queries:
    - alias: objectName
    patch:
      type: strategic
      pspec: |-
        spec:
          template:
            spec:
              affinity:
                nodeAffinity:
                  {{- if ne $isNodeAffinityRSIE "false" }}
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      {{- range $k, $v := $nodeAffinityRSIEVal }}
                      - 
                      {{- range $kk, $vv := $v }}
                        {{ $kk }}: {{ $vv }}
                      {{- end }}
                      {{- end }}
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                        {{- if ne .TaskResult.vreplist.nodeNames "" }}
                        {{- $nodeNamesMap := .TaskResult.vreplist.nodeNames | split " " }}
                        {{- range $k, $v := $nodeNamesMap }}
                        - {{ $v }}
                        {{- end }}
                        {{- end }}
                  {{- else }}
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                        {{- if ne .TaskResult.vreplist.nodeNames "" }}
                        {{- $nodeNamesMap := .TaskResult.vreplist.nodeNames | split " " }}
                        {{- range $k, $v := $nodeNamesMap }}
                        - {{ $v }}
                        {{- end }}
                        {{- end }}
                  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-controller-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: put
  task: |
    {{- $isMonitor := .Policy.VolumeMonitor.enabled | default "true" | lower -}}
    {{- $monitorVal := .Policy.VolumeMonitor.value | default "openebs/m-exporter:0.5.0" -}}
    {{- $affinity := .TaskResult.vpvc.affinity -}}
    {{- $affinityType := .TaskResult.vpvc.affinityType | default "soft" -}}
    {{- $affinityTopology := .TaskResult.vpvc.affinityTopology | default "kubernetes.io/hostname" -}}
    apiVersion: extensions/v1beta1
    Kind: Deployment
    metadata:
      labels:
        openebs.io/storage-engine-type: jiva
        openebs/volume-provisioner: jiva
        openebs/controller: jiva-controller
        openebs.io/controller: jiva-controller
        vsm: {{ .Volume.owner }}
        openebs.io/pv: {{ .Volume.owner }}
      annotations:
        {{- if eq $isMonitor "true" }}
        openebs.io/volume-monitor: "true"
        {{- end}}
        openebs.io/volume-type: jiva
      name: {{ .Volume.owner }}-ctrl
    spec:
      replicas: 1
      selector:
        matchLabels:
          {{- if eq $isMonitor "true" }}
          monitoring: volume_exporter_prometheus
          {{- end}}
          openebs.io/controller: jiva-controller
          openebs/controller: jiva-controller
          openebs.io/pv: {{ .Volume.owner }}
          vsm: {{ .Volume.owner }}
      template:
        metadata:
          labels:
            {{- if eq $isMonitor "true" }}
            monitoring: volume_exporter_prometheus
            {{- end}}
            openebs.io/controller: jiva-controller
            openebs/controller: jiva-controller
            openebs.io/pv: {{ .Volume.owner }}
            vsm: {{ .Volume.owner }}
        spec:
          {{- if ne $affinity "" }}
          affinity:
            podAffinity:
              {{- if eq $affinityType "soft" }}
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: controller.openebs.io/affinity 
                      operator: In 
                      values:
                      - {{ $affinity }} 
                  topologyKey: {{ $affinityTopology }}
              {{- else }}
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: controller.openebs.io/affinity
                    operator: In
                    values:
                    - {{ $affinity }}
                topologyKey: {{ $affinityTopology }}
              {{- end }}
          {{- end }}
          containers:
          - args:
            - controller
            - --frontend
            - gotgt
            - --clusterIP
            - {{ .TaskResult.vsvc.serviceIP }}
            - {{ .Volume.owner }}
            command:
            - launch
            image: {{ .Policy.ControllerImage.value }}
            name: {{ .Volume.owner }}-ctrl-con
            ports:
            - containerPort: 3260
              protocol: TCP
            - containerPort: 9501
              protocol: TCP
          {{- if eq $isMonitor "true" }}
          - args:
            - -c=http://127.0.0.1:9501
            command:
            - maya-volume-exporter
            image: {{ $monitorVal }}
            name: maya-volume-exporter
            ports:
            - containerPort: 9500
              protocol: TCP
          {{- end}}
          tolerations:
          - effect: NoExecute
            key: node.alpha.kubernetes.io/notReady
            operator: Exists
            tolerationSeconds: 0
          - effect: NoExecute
            key: node.alpha.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-replica-0.6.0
  annotations:
    openebs.io/policy: VolumePolicy
    policy.openebs.io/version: 0.6.0
  namespace: default
data:
  meta: |
    runNamespace: {{ .Volume.runNamespace }}
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: put
  task: |
    {{- $isTaintTolerations := .Policy.TaintTolerations.value | default "false" -}}
    {{- $taintTolerationsVal := fromYaml .Policy.TaintTolerations.value -}}
    {{- $isEvictionTolerations := .Policy.EvictionTolerations.value | default "false" -}}
    {{- $evictionTolerationsVal := fromYaml .Policy.EvictionTolerations.value -}}
    {{- $isNodeAffinityRSIE := .Policy.NodeAffinityRequiredSchedIgnoredExec.value | default "false" -}}
    {{- $nodeAffinityRSIEVal := fromYaml .Policy.NodeAffinityRequiredSchedIgnoredExec.value -}}
    {{- $isNodeAffinityPSIE := .Policy.NodeAffinityPreferredSchedIgnoredExec.value | default "false" -}}
    {{- $nodeAffinityPSIEVal := fromYaml .Policy.NodeAffinityPreferredSchedIgnoredExec.value -}}
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        openebs.io/storage-engine-type: jiva
        openebs/volume-provisioner: jiva
        openebs/replica: jiva-replica
        openebs.io/replica: jiva-replica
        vsm: {{ .Volume.owner }}
        openebs.io/pv: {{ .Volume.owner }}
      name: {{ .Volume.owner }}-rep
    spec:
      replicas: {{ .Policy.ReplicaCount.value }}
      selector:
        matchLabels:
          openebs/replica: jiva-replica
          openebs.io/replica: jiva-replica
          vsm: {{ .Volume.owner }}
          openebs.io/pv: {{ .Volume.owner }}
      template:
        metadata:
          labels:
            openebs/replica: jiva-replica
            openebs.io/replica: jiva-replica
            vsm: {{ .Volume.owner }}
            openebs.io/pv: {{ .Volume.owner }}
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    openebs/replica: jiva-replica
                    openebs.io/replica: jiva-replica
                    vsm: {{ .Volume.owner }}
                    openebs.io/pv: {{ .Volume.owner }}
                topologyKey: kubernetes.io/hostname
            nodeAffinity:
              {{- if ne $isNodeAffinityRSIE "false" }}
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  {{- range $k, $v := $nodeAffinityRSIEVal }}
                  - 
                  {{- range $kk, $vv := $v }}
                    {{ $kk }}: {{ $vv }}
                  {{- end }}
                  {{- end }}
              {{- end }}
              {{- if ne $isNodeAffinityPSIE "false" }}
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  {{- range $k, $v := $nodeAffinityPSIEVal }}
                  - 
                  {{- range $kk, $vv := $v }}
                    {{ $kk }}: {{ $vv }}
                  {{- end }}
                  {{- end }}
              {{- end }}
          containers:
          - args:
            - replica
            - --frontendIP
            - {{ .TaskResult.vsvc.serviceIP }}
            - --size
            - {{ .Volume.capacity }}
            - /openebs
            command:
            - launch
            image: {{ .Policy.ReplicaImage.value }}
            name: {{ .Volume.owner }}-rep-con
            ports:
            - containerPort: 9502
              protocol: TCP
            - containerPort: 9503
              protocol: TCP
            - containerPort: 9504
              protocol: TCP
            volumeMounts:
            - name: openebs
              mountPath: /openebs
          tolerations:
          {{- if ne $isTaintTolerations "false" }}
          {{- range $k, $v := $taintTolerationsVal }}
          - 
          {{- range $kk, $vv := $v }}
            {{ $kk }}: {{ $vv }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if ne $isEvictionTolerations "false" }}
          {{- range $k, $v := $evictionTolerationsVal }}
          - 
          {{- range $kk, $vv := $v }}
            {{ $kk }}: {{ $vv }}
          {{- end }}
          {{- end }}
          {{- end }}
          volumes:
          - name: openebs
            hostPath:
              path: {{ .TaskResult.vpath.storagePoolPath }}/{{ .Volume.owner }}
