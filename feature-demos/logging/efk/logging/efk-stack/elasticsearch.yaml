apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: logging

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: elasticsearch
  namespace: logging
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
  - update
  - create

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: elasticsearch
roleRef:
  kind: ClusterRole
  name: elasticsearch
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: logging

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: elasticsearch-logging
  namespace: logging
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: elasticsearch-logging
    spec:
      serviceAccount: elasticsearch
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.2
        imagePullPolicy: IfNotPresent
        name: elasticsearch-logging
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        resources:
          limits:
            cpu: "1"
          requests:
            cpu: 100m
        env:
        - name: "discovery.type"
          value: "single-node"
        - name: "ES_JAVA_OPTS"
          value: "-Xms512m -Xmx512m"
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /data
          name: storage
      volumes:
      - emptyDir: {}
        name: storage

---

apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: elasticsearch-logging
  name: elasticsearch-logging
  namespace: logging
spec: 
  ports: 
  - port: 9200
    protocol: TCP
    targetPort: db
  selector: 
    app: elasticsearch-logging
  type: ClusterIP
